services:
  web:
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: planetarium-backend
    command: ["/bin/sh", "/usr/src/commands/run_planetarium_backend.sh"]
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - media_volume:/usr/src/app/media/
    networks:
      - planetarium-network

  db:
    restart: unless-stopped
    image: "postgres:alpine"
    container_name: postgres-planetarium
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_planetarium_data:/var/lib/postgresql/data
    networks:
      - planetarium-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  postgres_planetarium_data:
    driver: local
  media_volume:

networks:
  planetarium-network:
    driver: bridge
